name: Validate JSON

on:
  pull_request:
    paths:
      - 'data/*.json'  # Only run when JSON files in data directory change

jobs:
  validate-json:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          
      - name: Create validation script
        run: |
          cat > validate-json.js << 'EOF'
          const fs = require('fs');
          const path = require('path');

          // Schema for contributor JSON files
          const schema = {
            required: ['name', 'role', 'description', 'github'],
            maxLength: {
              description: 100
            }
          };

          // Validate a single JSON file
          function validateFile(filePath) {
            try {
              const content = fs.readFileSync(filePath, 'utf8');
              const data = JSON.parse(content);
              
              // Check required fields
              for (const field of schema.required) {
                if (!data[field]) {
                  throw new Error(`Missing required field: ${field}`);
                }
                if (typeof data[field] !== 'string') {
                  throw new Error(`Field ${field} must be a string`);
                }
                if (data[field].trim() === '') {
                  throw new Error(`Field ${field} cannot be empty`);
                }
              }
              
              // Check description length
              if (data.description.length > schema.maxLength.description) {
                throw new Error(`Description must be under ${schema.maxLength.description} characters`);
              }
              
              // Validate GitHub username format
              if (!/^[a-zA-Z0-9-]+$/.test(data.github)) {
                throw new Error('Invalid GitHub username format');
              }
              
              // Validate Twitter handle if present
              if (data.twitter && !/^[a-zA-Z0-9_]+$/.test(data.twitter)) {
                throw new Error('Invalid Twitter handle format');
              }
              
              return true;
            } catch (error) {
              console.error(`Error in ${path.basename(filePath)}: ${error.message}`);
              return false;
            }
          }

          // Validate all JSON files in data directory
          const dataDir = path.join(__dirname, 'data');
          const files = fs.readdirSync(dataDir)
            .filter(file => file.endsWith('.json'));

          let hasErrors = false;

          files.forEach(file => {
            const filePath = path.join(dataDir, file);
            
            // Validate filename matches GitHub username
            const username = file.replace('.json', '');
            const content = JSON.parse(fs.readFileSync(filePath, 'utf8'));
            
            if (username !== content.github.toLowerCase()) {
              console.error(`Error in ${file}: Filename must match GitHub username in lowercase`);
              hasErrors = true;
              return;
            }
            
            if (!validateFile(filePath)) {
              hasErrors = true;
            }
          });

          process.exit(hasErrors ? 1 : 0);
          EOF

      - name: Validate JSON files
        run: node validate-json.js 